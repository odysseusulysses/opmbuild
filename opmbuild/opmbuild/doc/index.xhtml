<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <link rel="stylesheet" type="text/css" href="css/common.css" />
        <title>OPM Builder</title>
    </head>
    <body>
<div id="wrapper">
  <div id="header">OPM Builder</div>
  <ul id="nav">
    <li><a href="http://www.free-css.com/">Example One</a></li>
    <li><a href="http://www.free-css.com/">Example Two</a></li>
    <li><a href="http://www.free-css.com/">Example Three</a></li>
    <li><a href="http://www.free-css.com/">Example Four</a></li>
  </ul>
  <div id="content" class="clearfix">
    <div id="col_1">
      <h2>Information</h2>
      <ul id="subnav">
        <li><a href="http://www.free-css.com/" >Lorem Ipsum</a></li>
        <li><a href="http://www.free-css.com/" >Dylan Butler</a></li>
        <li><a href="http://www.free-css.com/" >Example Three</a></li>
      </ul>
    </div>
    <div id="col_2">
        <h1>OPM Builder</h1>
        <p>
            The goals of OPM Builder are the following.
            <ul>
                <li><i>Convenience</i>: The API aims to be easy to use, in particular by allowing OPM graphs, whether to be stored or communicated, to be built iteratively.</li>
                <li><i>Constancy</i>: As the OPM model or any particular serialisation of it evolve, the OPM Builder API will not change in ways which break existing programs, but instead add functionality and deprecate obsolete methods or classes before removal.</li>
                <li><i>Collections-based</i>: The API aims to be familiar to Jave programmers by using the appropriate standard Collection APIs whenever a collection is modelled.</li>
                <li><i>Convention</i>: Where a varaiable has an obvious default value, can be auto-generated or retrieved from elsewhere, the API aims to do this instead of requiring the user to provide such data.</li>
                <li><i>Conversion</i>: OPM Builder is not tied to a particular serialisation, serialising and deserialising from different formats and, in particular, can be used to convert between two versions of a serialisation (e.g. two versions of the standard XML serialisation).</li>
                <li><i>Unordered</i>: OPM Builder aims to be convenient by being agnostic to the order in which building is done, e.g. construct an empty graph then populate it, or create graph elements then a graph to contain them.</li>
            </ul>
        </p>
        <h1>Chapters</h1>
        <p>
            <ol>
                <li><a href = "model.xhtml">Object Model</a></li>
                <li><a href = "build.xhtml">Building</a></li>
                <li><a href = "navigate.xhtml">Navigating</a></li>
                <li><a href = "query.xhtml">Querying</a></li>
                <li><a href = "poem.xhtml">POEM Format</a></li>
                <li><a href = "xml.xhtml">XML Serialisation</a></li>
                <li><a href = "dc.xhtml">Dublin Core Conversion</a></li>
                <li><a href = "ss.xhtml">SourceSource</a></li>
            </ol>
        </p>
    </div>
  </div>
  <div id="footer"><small>
    Layout by <a href="http://www.free-css.com/" target="_blank">Free CSS.com</a></small></div>
</div>

    </body>
</html>
